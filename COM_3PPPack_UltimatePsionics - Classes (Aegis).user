<?xml version="1.0" encoding="UTF-8"?>
<document signature="Hero Lab Data">
  <thing id="cHelpPU0" name="Aegis" compset="Class" uniqueness="unique">
    <fieldval field="cHDSides" value="10"/>
    <fieldval field="cAbbr" value="Aeg"/>
    <fieldval field="cSkills" value="4"/>
    <fieldval field="srcPageNum" value="28"/>
    <fieldval field="srcBookInf" value="Ultimate Psionics"/>
    <fieldval field="cSCRNumDce" value="2"/>
    <fieldval field="cSCRDceSiz" value="6"/>
    <fieldval field="cSCRMult" value="10"/>
    <arrayval field="cPsiPPTot" index="5" value="9"/>
    <arrayval field="cPsiPPTot" index="6" value="11"/>
    <arrayval field="cPsiPPTot" index="7" value="14"/>
    <arrayval field="cPsiPPTot" index="8" value="17"/>
    <arrayval field="cPsiPPTot" index="9" value="20"/>
    <arrayval field="cPsiPPTot" index="10" value="24"/>
    <arrayval field="cPsiPPTot" index="11" value="28"/>
    <arrayval field="cPsiPPTot" index="12" value="32"/>
    <arrayval field="cPsiPPTot" index="13" value="37"/>
    <arrayval field="cPsiPPTot" index="14" value="42"/>
    <arrayval field="cPsiPPTot" index="15" value="47"/>
    <arrayval field="cPsiPPTot" index="16" value="52"/>
    <arrayval field="cPsiPPTot" index="17" value="58"/>
    <arrayval field="cPsiPPTot" index="18" value="64"/>
    <arrayval field="cPsiPPTot" index="19" value="70"/>
    <arrayval field="cPsiPPTot" index="0" value="1"/>
    <arrayval field="cPsiPPTot" index="1" value="2"/>
    <arrayval field="cPsiPPTot" index="2" value="3"/>
    <arrayval field="cPsiPPTot" index="3" value="5"/>
    <arrayval field="cPsiPPTot" index="4" value="7"/>
    <usesource source="pPsiUn"/>
    <tag group="Classes" tag="Aegis" name="Aegis"/>
    <tag group="Psionics" tag="Class"/>
    <tag group="ClassSkill" tag="skAcrobat"/>
    <tag group="ClassSkill" tag="Craft"/>
    <tag group="ClassSkill" tag="Profession"/>
    <tag group="ClassSkill" tag="skPUAhypno"/>
    <tag group="ClassSkill" tag="skClimb"/>
    <tag group="ClassSkill" tag="skFly"/>
    <tag group="ClassSkill" tag="skIntim"/>
    <tag group="ClassSkill" tag="skKnowEng"/>
    <tag group="ClassSkill" tag="skPUKnwPsi"/>
    <tag group="ClassSkill" tag="skSpellcr"/>
    <tag group="ClassSkill" tag="skSwim"/>
    <tag group="ClassSkill" tag="skUseMagic"/>
    <tag group="cFort" tag="Good"/>
    <tag group="cRef" tag="Poor"/>
    <tag group="cWill" tag="Good"/>
    <tag group="cAttack" tag="Good"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="cPUAegHelp"></bootstrap>
    <bootstrap thing="cPUReconfi">
      <autotag group="ClSpecWhen" tag="19"/>
      </bootstrap>
    <bootstrap thing="cPUMastCr">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPUCanniSu">
      <autotag group="ClSpecWhen" tag="12"/>
      </bootstrap>
    <bootstrap thing="cPUCanniSu">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="cPUCanniSu">
      <autotag group="ClSpecWhen" tag="16"/>
      </bootstrap>
    <bootstrap thing="cPUCanniSu">
      <autotag group="ClSpecWhen" tag="18"/>
      </bootstrap>
    <bootstrap thing="cPUCanniSu">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="cPUPerfMer">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="cPUAugSuit">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cPUAugSuit">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cPUAugSuit">
      <autotag group="ClSpecWhen" tag="12"/>
      </bootstrap>
    <bootstrap thing="cPUAugSuit">
      <autotag group="ClSpecWhen" tag="16"/>
      </bootstrap>
    <bootstrap thing="cPUAugSuit">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="cPUAstrRep">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPUCraftsm">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cPUCraftsm">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cPUCraftsm">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="cPUCraftsm">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="cPUCraftsm">
      <autotag group="ClSpecWhen" tag="18"/>
      </bootstrap>
    <bootstrap thing="cPUAstSuit">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPUAegDR">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cPUAegDR">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPUAegDR">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cPUAegDR">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="cPUAegDR">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="cPUAegDR">
      <autotag group="ClSpecWhen" tag="17"/>
      </bootstrap>
    <bootstrap thing="cPUAegDR">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="cPUInvigSu">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cPUReconfi">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cPUReconfi">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPUReconfi">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cPUReconfi">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cPUReconfi">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="cPUReconfi">
      <autotag group="ClSpecWhen" tag="13"/>
      </bootstrap>
    <bootstrap thing="cPUReconfi">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cPUReconfi">
      <autotag group="ClSpecWhen" tag="17"/>
      </bootstrap>
    <link linkage="psiattr" thing="aINT"/>
    <eval phase="PostLevel" priority="500"><![CDATA[
      ~ Set Aegis level into Aegis Helper pick &
      hero.childfound[cPUAegHelp].field[S2ClsLevel].value += field[cTotalLev].value]]></eval>
    </thing>
  <thing id="cPUAegis" name="Aegis" description="While the shaper is the master of manipulating ectoplasm and creating any manner of item, the aegis has learned to take ectoplasm and form it into a suit to be worn around his body, granting him a variety of benefits.\n\nThe aegis can shape his astral suit into several different forms and is capable of altering its abilities to suit his needs.\n\n{b}Role:{/b} An aegis is a front-line combatant. His astral suit allows him significant flexibility in handling combat and non-combat situations, and his defensive abilities are considerable.\n\n{b}Alignment:{/b} Any." compset="ClassLevel" maxlimit="20">
    <usesource source="pPsiUn"/>
    <tag group="ClassType" tag="Normal"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="cHelpPU0"></bootstrap>
    <link linkage="helper" thing="cHelpPU0"/>
    <eval phase="First" priority="50"><![CDATA[
      ~ Assign Class helper tag very early on the hero for
      ~ testing on the Bootstrap armor Thing. &
      perform hero.assign[Custom.AegisLvls]]]></eval>
    </thing>
  <thing id="cfgPUAstSu" name="Astral Suit" compset="Configure" uniqueness="unique">
    <fieldval field="cfgObject1" value="Astral Suit"/>
    <fieldval field="cfgObject2" value="Customization"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="15000"><![CDATA[
      ~ Set focus to Aegis Helper Pick &
      perform hero.childfound[cPUAegHelp].setfocus
      doneif (state.isfocus = 0)

      ~ Set Astral Suit Level from Aegis Helper &
      field[cfgLevel].value += focus.field[abValue].value

      ~ Set Configurable points from Aegis Helper.
      ~ abValue2 is Bonus points and abValue3 is the Base Points.
      field[cfgMax2].value += focus.field[abValue2].value + focus.field[abValue3].value]]>
      <after name="Set Aegis Base Points"/>
      </eval>
    </thing>
  <thing id="cPUAegHelp" name="Aegis Array Helper" description="This helper pick holds Aegis Suit Customization points and total points." compset="S2GenAry" uniqueness="useronce">
    <comment>S2Array = Points per level; abValue = Suit Level; abValue2 = Bonus/Penalty points; abValue3 = Configurable points.</comment>
    <arrayval field="S2Array" index="0" value="3"/>
    <arrayval field="S2Array" index="1" value="4"/>
    <arrayval field="S2Array" index="2" value="5"/>
    <arrayval field="S2Array" index="3" value="7"/>
    <arrayval field="S2Array" index="4" value="8"/>
    <arrayval field="S2Array" index="5" value="9"/>
    <arrayval field="S2Array" index="6" value="10"/>
    <arrayval field="S2Array" index="7" value="11"/>
    <arrayval field="S2Array" index="8" value="13"/>
    <arrayval field="S2Array" index="9" value="14"/>
    <arrayval field="S2Array" index="10" value="15"/>
    <arrayval field="S2Array" index="11" value="16"/>
    <arrayval field="S2Array" index="12" value="17"/>
    <arrayval field="S2Array" index="13" value="19"/>
    <arrayval field="S2Array" index="14" value="20"/>
    <arrayval field="S2Array" index="15" value="21"/>
    <arrayval field="S2Array" index="16" value="22"/>
    <arrayval field="S2Array" index="17" value="23"/>
    <arrayval field="S2Array" index="18" value="25"/>
    <arrayval field="S2Array" index="19" value="26"/>
    <eval phase="PostLevel" priority="12000" name="Set Aegis Base Points"><![CDATA[
      ~ Set abValue for backwards compatiblity &
      field[abValue].value += field[S2ClsLevel].value
      field[S2AryLevel].value = field[S2ClsLevel].value - 1

      ~ Set base customization points into Value Three
      field[abValue3].value += field[S2Array].arrayvalue[field[S2AryLevel].value]]]></eval>
    </thing>
  <thing id="cPUAstrRep" name="Astral Repair" description="An aegis is capable of repairing mundane items, restoring 2 hit points of damage to the touched item as a standard action usable at will. If the object has the broken condition, this condition is removed if the object is restored to at least half its original hit points. All of the pieces of an object must be present for this ability to function. This ability has no effect on objects that have been warped or otherwise transmuted, but it can still repair damage done to such items." compset="ClSpecial">
    <fieldval field="abValue" value="2"/>
    <tag group="AbilType" tag="PsiLike"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="puAstRep1">
      <containerreq phase="First" priority="2500">!AbReplace.cPUAstrRep</containerreq>
      <autotag group="Usage" tag="AtWill"/>
      <autotag group="Helper" tag="PsiLike"/>
      </bootstrap>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ If we've been Disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set the total amount of points repaired
      perform hero.childfound[puAstRep1].assignstr["Value." & field[abValue].value]]]></eval>
    </thing>
  <thing id="puAstRep1" name="Astral Repair" description="An aegis is capable of repairing mundane items, restoring 2 hit points of damage to the touched item as a standard action usable at will. If the object has the broken condition, this condition is removed if the object is restored to at least half its original hit points. All of the pieces of an object must be present for this ability to function. This ability has no effect on objects that have been warped or otherwise transmuted, but it can still repair damage done to such items." compset="PsiPower">
    <comment>This is a Helper power to get teh astral repair to display correctly as a Psi-Like ability on the Psionics tab.</comment>
    <tag group="sCastTime" tag="Action1"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="sLevel" tag="1"/>
    <tag group="sRange" tag="Touch"/>
    <tag group="sDuration" tag="Instant"/>
    <tag group="sSave" tag="None"/>
    <tag group="psiDiscip" tag="pdPUMetacr"/>
    <tag group="sResist" tag="No"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="50000"><![CDATA[
      ~ If no HP value get out now!
      doneif (tagis[Value.?] = 0)

      ~ Display the number of hit points that can be repaired
      field[livename].text = field[thingname].text & " (" & tagvalue[Value.?] & " HP)"]]></eval>
    </thing>
  <thing id="cPUAstSuit" name="Form Astral Suit" description="Every aegis learns to draw forth ectoplasm and form an astral suit around their form. The aegis can select from three different types when forming his astral suit – skin, armor, or juggernaut. An aegis is always considered to be proficient with his astral suit, even if he does not have the appropriate armor proficiency. The amount of time forming this astral suit takes depends on the type of suit being formed. Different astral suit forms grant different free customizations. These free customizations never count against the aegis’s total number of customization points spent on his astral suit.\n\nThe aegis chooses the appearance of his astral suit, although its shape must reflect the selections the aegis has chosen: astral skin would cover the aegis like a {i}psychoactive skin{/i}, astral juggernaut would appear to cover the aegis like plate armor, etc.\n\nAn astral suit can be dismissed as a free action.\n\nAn astral suit does not function in areas where psionics do not work, such as a {i}null psionics field{/i}. {i}Dismiss ectoplasm{/i} can be used against an astral suit; treat the manifester level as the aegis’s class level, although the aegis can simply form his astral suit again on his next turn." compset="ClSpecial" summary="Form an astral suit around your body.">
    <fieldval field="actName" value="Wearing Astral Suit"/>
    <tag group="SpecType" tag="Defense"/>
    <tag group="User" tag="Activation"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="cfgPUAstSu">
      <containerreq phase="First" priority="450">!AbReplace.cPUAstSuit</containerreq>
      </bootstrap>
    <eval phase="First" priority="90"><![CDATA[
      ~if we've been replaced, get out now
      doneif (tagis[Helper.SpcReplace] <> 0)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ If ability not active get out now!
      doneif (field[abilActive].value = 0)

      ~ Set a hero tag so we can test that we are active by other Picks
      ~ at a very early timing for bootstraps.
      perform hero.assign[Custom.WearAstS]]]></eval>
    <eval phase="PostLevel" priority="10000" index="2"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      field[abValue].value += field[xCount].value

      ~ The following should only happen once on the first copy
      doneif (tagis[Helper.FirstCopy] = 0)

      ~ Increase the number of allowed Astral Suits
      hero.childfound[cfgPUAstSu].field[cfgMax1].value += field[abValue].value]]></eval>
    </thing>
  <thing id="cPUCraftsm" name="Craftsman" description="Beginning at 2nd level, an aegis gains a +1 bonus to any one Craft skill of his choice. At 6th level and every four levels thereafter, this bonus increases by 1." compset="ClSpecial" summary="Gain a bonus to any one Craft skill of your choice.">
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ Set the list name
      field[listname].text = field[thingname].text & " " & signed(field[xIndex].value)

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      field[abValue].value += field[xCount].value
      field[livename].text = field[thingname].text & " " & signed(field[abValue].value)

      ~ The following should only happen once on the first copy
      doneif (tagis[Helper.FirstCopy] = 0)

      ~ Set custom expression only on the first class special
      field[usrCandid1].text = "component.BaseSkill & Helper.SkCatCraft"

      ~ If nothing chosen get out now!
      doneif (field[usrChosen1].ischosen = 0)

      ~ Increase selected craft skill
      field[usrChosen1].chosen.field[Bonus].value += field[abValue].value]]></eval>
    </thing>
  <thing id="cPUAegDR" name="Damage Reduction" description="Starting at 2nd level, when an aegis is wearing his astral suit, he gains damage reduction 2/-, regardless of what type of astral suit he is wearing. At 5th level and every three levels thereafter, this damage reduction improves by 1." compset="ClSpecial" summary="Gain DR/- when wearing your Astral Suit.">
    <fieldval field="abValue" value="1"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="SpecType" tag="DR"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10100"><![CDATA[
      var ListValue as number
      ListValue = field[xIndex].value + 1
      ~ Set the list name
      field[listname].text = field[thingname].text & " " & ListValue & "/-"

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      field[abValue].value += field[xCount].value
      field[livename].text = field[thingname].text & " " & field[abValue].value & "/-"

      ~ The following should only happen once on the first copy
      doneif (tagis[Helper.FirstCopy] = 0)
      ~ If we're not wearing the Astral Suit, get out now
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ Apply DR to hero
      #applydr[xDamRd,field[abValue].value]]]></eval>
    </thing>
  <thing id="cPUInvigSu" name="Invigorating Suit" description="An aegis of at least 3rd level wearing his astral suit gains a +4 bonus on the following checks and saves: Swim checks made to resist nonlethal damage from exhaustion; Constitution checks made to continue running; Constitution checks made to avoid nonlethal damage from a forced march; Constitution checks made to hold breath; Constitution checks made to avoid nonlethal damage from starvation or thirst; Fortitude saves made to avoid nonlethal damage from hot or cold environments; and Fortitude saves made to resist damage from suffocation." compset="ClSpecial" summary="Gain a bonus to Consitution checks and Fortitude saves.">
    <fieldval field="abValue" value="4"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="50000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ The following should only happen once on the first copy
      doneif (tagis[Helper.FirstCopy] = 0)
      ~ If we're not wearing the Astral Suit, get out now
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      #situational[hero.childfound[skSwim],signed(field[abValue].value) & " to resist nonlethal damage from exhaustion",field[name].text]
      #situational[hero.childfound[aCON],signed(field[abValue].value) & " to continue running",field[name].text]
      #situational[hero.childfound[aCON],signed(field[abValue].value) & " to avoid nonlethal damage from a forced march",field[name].text]
      #situational[hero.childfound[aCON],signed(field[abValue].value) & " to hold breath",field[name].text]
      #situational[hero.childfound[aCON],signed(field[abValue].value) & " to avoid nonlethal damage from starvation or thirst",field[name].text]
      #situational[hero.childfound[svFort],signed(field[abValue].value) & " to avoid nonlethal damage from hot or cold environments",field[name].text]
      #situational[hero.childfound[svFort],signed(field[abValue].value) & " to resist damage from suffocation",field[name].text]]]></eval>
    </thing>
  <thing id="cPUReconfi" name="Reconfigure" description="Starting at 3rd level, an aegis can reconfigure up to his Intelligence modifier in customization points on his astral suit once per day as a standard action. Every two levels thereafter, he can use this ability an additional time per day." compset="ClSpecial" summary="Reconfigure up to your Int mod in customization points.">
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="Day"/>
    <tag group="SbNamePar" tag="IncUses"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="10000"><![CDATA[
      ~ Set the list name
      field[listname].text = field[thingname].text & " " & field[xIndex].value & " point"

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set amount of customization
      field[abValue].value += #attrbonus[aINT]
      ~ Set number of uses per day
      field[trkMax].value += field[xCount].value

      ~ Show number of customization points
      field[livename].text = field[thingname].text & " (" & field[abValue].value & " customization points)"]]></eval>
    </thing>
  <thing id="cPUAugSuit" name="Augment Suit" description="An aegis learns how to infuse his astral suit with his psionic power, augmenting the capacity of his suit. Beginning at 4th level, the aegis may spend up to one power point per four class levels to customize his Astral Suit, gaining one temporary customization point for each power point spent. \n\nThis ability, activated as a standard action, lasts for a number of rounds equal to the aegis’ Intelligence modifier.\n\nActivating this ability again, while already in use, immediately causes the previous duration to end. \n\nAn aegis may end the duration as a free action at any time." compset="ClSpecial" summary="Spend power points to gain temp customization points.">
    <tag group="AbilType" tag="Super"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="Rounds"/>
    <tag group="User" tag="Activation"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ Set the list name
      field[listname].text = field[thingname].text & " " & field[xIndex].value & " PP"

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set number of power points
      field[abValue].value += field[xCount].value
      field[livename].text = field[thingname].text & " (" & field[abValue].value & " PP)"

      ~ The following should only happen once on the first copy
      doneif (tagis[Helper.FirstCopy] = 0)
      ~ If not activated get out now!
      doneif (field[abilActive].value = 0)

      ~ Give temp customization points
      #value2[cPUAegHelp] += field[abValue].value]]></eval>
    <eval phase="PostAttr" priority="10000" index="2"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Rounds of use equal to Int mod
      field[trkMax].value += #attrmod[aINT]]]></eval>
    </thing>
  <thing id="cPUMastCr" name="Master Craftsman" description="At 5th level, an aegis gains the Master Craftsman feat as a bonus feat. He must still meet the prerequisites of the feat in order to gain its benefits." compset="ClSpecial" summary="Gain the Master Craftsman feat as a bonus feat.">
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="fMasCraft">
      <containerreq phase="First" priority="500"><![CDATA[count:Custom.AegisLvls >= 5 & !AbReplace.cPUMastCr]]></containerreq>
      </bootstrap>
    </thing>
  <thing id="cPUCanniSu" name="Cannibalize Suit" description="Starting at 12th level, an aegis learns to convert the psionic energy used to create his suit into healing power. Once per day as a standard action, he can dismiss his astral suit and heal a number of hit points equal to his customization pool. The aegis cannot reform his suit again for one minute after using this ability. Every two levels thereafter, the aegis can use this ability an additional time per day. Additional customization points gained from Augment Suit are not counted for this ability." compset="ClSpecial" summary="Dismiss astral suit to heal.">
    <tag group="Usage" tag="Day"/>
    <tag group="User" tag="Tracker"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ Set the list name
      field[listname].text = field[thingname].text & " " & field[xIndex].value & "/day"

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Uses per day
      field[trkMax].value += field[xCount].value

      ~ Healing amout is BASE point value
      field[livename].text = field[thingname].text & " (" & #value3[cPUAegHelp] & " healing)"]]></eval>
    </thing>
  <thing id="cPUPerfMer" name="Perfect Merger" description="An aegis of 20th level has learned to become one with his suit. His suit cannot be dispelled or removed against his will by any means, although his astral suit ability still does not function within areas where psionics do not work, such as a {i}null psionics field{/i}.\n\nIn addition, the aegis can spend two daily uses of his reconfigure ability, to alter all of the customizations on his astral suit.\n\nFinally, once per day, the aegis can boost his cannibalize suit ability, healing all of his hit point damage, although he cannot reform his suit for ten minutes after using this ability, rather than the standard one minute." compset="ClSpecial" summary="Cannibalize suit to heal all damage.">
    <fieldval field="trkMax" value="1"/>
    <tag group="Usage" tag="Day"/>
    <tag group="User" tag="Tracker"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      hero.childfound[cPUReconfi].field[DescAppend].text = "{b}" & field[thingname].text & ":{/b} Spend two daily uses of reconfigure ability, to alter all of the customizations on his astral suit."]]></eval>
    </thing>
  <thing id="rcPUaSkin" name="Astral Skin" description="When formed in this way, an astral suit resembles a {i}psychoactive skin{/i}. Forming an astral suit into this form takes a swift action. The aegis gains no armor bonus from his astral suit when worn in this fashion, but he gains the following free customizations: speed (2), nimble. At 2nd level, the aegis gains the evasion customization as a free customization when the astral suit is in astral skin form. At 12th level, the aegis gains the improved evasion customization as a free customization when the astral suit is in astral skin form. An astral suit in this form does not count as any type of armor, but does count as a {i}psychoactive skin{/i} and follows all the rules of a {i}psychoactive skin{/i}." compset="RaceCustom" summary="AC +0; Free customizations: speed (2), nimble.">
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="rcPUaSpeed">
      <autotag group="CustTaken" tag="cfgPUAstSu"/>
      </bootstrap>
    <bootstrap thing="rcPUaSpeed">
      <autotag group="CustTaken" tag="cfgPUAstSu"/>
      </bootstrap>
    <bootstrap thing="rcPUaNimbl">
      <autotag group="CustTaken" tag="cfgPUAstSu"/>
      </bootstrap>
    <bootstrap thing="rcPUaEvade">
      <containerreq phase="First" priority="500"><![CDATA[count:Custom.AegisLvls >= 2]]></containerreq>
      <autotag group="CustTaken" tag="cfgPUAstSu"/>
      </bootstrap>
    <bootstrap thing="rcPUaIEvad">
      <containerreq phase="First" priority="500"><![CDATA[count:Custom.AegisLvls >= 12]]></containerreq>
      <autotag group="CustTaken" tag="cfgPUAstSu"/>
      </bootstrap>
    <eval phase="First"><![CDATA[
      ~ Set tags on hero &
      perform hero.assign[Custom.HasAstSkin]
      perform hero.assign[Custom.ASChosen]]]></eval>
    </thing>
  <thing id="rcPUaSpeed" name="Speed" description="The aegis&apos;s base land speed is increased by 5 feet. This customization can be selected up to five times.{br}{br}Its effects stack." compset="RaceCustom" summary="Increase speed by +5ft.">
    <fieldval field="abValue" value="5"/>
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="SpecType" tag="Movement"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ Set Helper.FirstCopy &
      call X1SetFirst]]></eval>
    <eval phase="PostLevel" priority="10050" index="2"><![CDATA[
      ~ If we are not the first copy, get out now! &
      doneif (tagis[Helper.FirstCopy] = 0)

      ~ Set feet bonus into first value
      field[abValue].value += field[abValue5].value * 5
      field[abSumm].text = "Increase land speed by " & signed(field[abValue].value) & " ft while wearing astral suit."

      ~ If not wearing astral suit, get out now!
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ Bonus to Speed
      hero.child[Speed].field[tSpeed].value += field[abValue].value]]></eval>
    <prereq message="You may not have more than 5 copies of this ability.">
      <validate><![CDATA[
        if (@ispick <> 0) then
          validif (tagcount[HasAbility.rcPUaSpeed] <= 5)

        ~ otherwise, look for fewer, since we're adding this
        else
          validif (tagcount[HasAbility.rcPUaSpeed] < 5)
        endif]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaNimbl" name="Nimble" description="The aegis gains a +2 enhancement bonus to Dexterity while he is wearing his astral suit. This customization can be selected a second time beginning at 5th level, and a third time starting at 10th level. Each subsequent time it is taken, the enhancement bonus to Dexterity is increased by +2." compset="RaceCustom" summary="+2 enhancement bonus to Dexterity while wearing astral suit.">
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="2"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ Set Helper.FirstCopy &
      call X1SetFirst

      ~ If we're not bootstrapped to something, get out now!
      doneif (isroot = 0)

      ~ Using OverCrit tags for getting this ability "free"
      perform hero.pushtags[OverCrit.?]]]></eval>
    <eval phase="PostLevel" priority="10050" index="2"><![CDATA[
      ~ If we are not the first copy, get out now!
      doneif (tagis[Helper.FirstCopy] = 0)

      ~ Bonus is 2 times the number of times this ability has
      ~ been taken.
      field[abValue].value += field[abValue5].value * 2
      field[livename].text = field[thingname].text & " (" & signed(field[abValue].value) & " Dex)"
      field[abSumm].text = signed(field[abValue].value) & " enhancement bonus to Dexterity while wearing astral suit."

      ~ If we're not wearing astral suit, get out now!
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ Increase Dex bonus
      #enhancementbonus[hero.child[aDEX], field[abValue].value]]]></eval>
    <prereq message="">
      <validate><![CDATA[
        var allowed as number
        var taken as number
        allowed = 1
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        ~ At level 5 can take this again
        If (levels >= 5) Then
          allowed += 1
        Endif
        ~ At level 10 can take this again
        If (levels >= 10) Then
          allowed += 1
        Endif

        ~ Count the number of times manually added
        taken = tagcount[HasAbility.rcPUaNimbl] - tagcount[OverCrit.rcPUaNimbl]

        ~ if we're a pick, then there must be 3 or fewer copies of
        ~ this ability
        If (@ispick <> 0) Then
          validif (taken <= allowed)

        ~ otherwise, look for fewer, since we're adding this
        Else
          validif (taken < allowed)
        Endif

        @message = "You may not have more than " & allowed & " copies of this ability."]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaEvade" name="Evasion" description="As long as the aegis is wearing the astral suit, if the aegis is subjected to an attack that normally allows a Reflex save for half damage, he takes no damage if he makes a successful saving throw. The aegis must be at least 2nd level before selecting this customization." compset="RaceCustom" summary="Gain evasion ability while wearing astral suit." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="SpecType" tag="Defense"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="raEvasion">
      <containerreq phase="First" priority="500">Custom.WearAstS</containerreq>
      </bootstrap>
    <prereq message="Aegis level 2+ required.">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        validif (levels >= 2)]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaArmor" name="Astral Armor" description="When formed into astral armor, an astral suit resembles masterwork chainmail and is treated as such for all mechanical purposes. Should the aegis be wearing armor when forming his astral suit in this fashion, the astral suit encloses the armor and the aegis gains the benefits of only his astral suit and not that from his armor, even if his armor would confer better benefits. Forming an astral suit into this form takes a move action. The aegis gains the following free customizations: brawn, improved damage. At 2nd level, the aegis gains the flexible suit customization as a free customization when the astral suit is in astral armor form. At 8th level, the astral suit resembles and is treated as a masterwork breastplate for all mechanical purposes." compset="RaceCustom" summary="Chainmail/Breastplate; Free customizations: brawn, improved damage." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="rcPUaImDmg">
      <autotag group="CustTaken" tag="cfgPUAstSu"/>
      </bootstrap>
    <bootstrap thing="rcPUaBrawn">
      <autotag group="CustTaken" tag="cfgPUAstSu"/>
      </bootstrap>
    <bootstrap thing="rcPUaFlexS">
      <containerreq phase="First" priority="500"><![CDATA[count:Custom.AegisLvls >= 2]]></containerreq>
      <autotag group="CustTaken" tag="cfgPUAstSu"/>
      </bootstrap>
    <bootstrap thing="mPUAstArCh">
      <containerreq phase="First" priority="100"><![CDATA[count:Custom.AegisLvls < 8 & Custom.WearAstS]]></containerreq>
      </bootstrap>
    <bootstrap thing="mPUAstArBr">
      <containerreq phase="First" priority="100"><![CDATA[count:Custom.AegisLvls >= 8 & Custom.WearAstS]]></containerreq>
      </bootstrap>
    <eval phase="First"><![CDATA[
      ~ Set tags on hero &
      perform hero.assign[Custom.HasAstSkin]
      perform hero.assign[Custom.ASChosen]]]></eval>
    </thing>
  <thing id="mPUAstArCh" name="Astral Chainmail" description="When formed into astral armor, an astral suit resembles masterwork chainmail and is treated as such for all mechanical purposes. Should the aegis be wearing armor when forming his astral suit in this fashion, the astral suit encloses the armor and the aegis gains the benefits of only his astral suit and not that from his armor, even if his armor would confer better benefits. Forming an astral suit into this form takes a move action." compset="Armor">
    <fieldval field="gWeight" value="40"/>
    <usesource source="pPsiUn"/>
    <tag group="Custom" tag="AstArmor"/>
    <tag group="EquipType" tag="Metal"/>
    <tag group="ArmorCateg" tag="Gauntlets"/>
    <tag group="ArmorCateg" tag="Slows"/>
    <tag group="ArmorCheck" tag="5"/>
    <tag group="ArmorClass" tag="Medium"/>
    <tag group="ArmorMaxDx" tag="2"/>
    <tag group="ArmorAC" tag="6"/>
    <tag group="ArmorArcFl" tag="30"/>
    <tag group="Helper" tag="AlwaysMast"/>
    <tag group="Helper" tag="AutoEquip"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="Helper" tag="Proficient"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="20000"><![CDATA[
      ~ Apply astral suit bonuses &
      call PUAstBonus]]></eval>
    </thing>
  <thing id="mPUAstArBr" name="Astral Breastplate" description="When formed into astral armor, an astral suit resembles masterwork breastplate and is treated as such for all mechanical purposes. Should the aegis be wearing armor when forming his astral suit in this fashion, the astral suit encloses the armor and the aegis gains the benefits of only his astral suit and not that from his armor, even if his armor would confer better benefits. Forming an astral suit into this form takes a move action." compset="Armor">
    <fieldval field="gWeight" value="30"/>
    <usesource source="pPsiUn"/>
    <tag group="Custom" tag="AstArmor"/>
    <tag group="EquipType" tag="Metal"/>
    <tag group="ArmorCateg" tag="Slows"/>
    <tag group="ArmorCheck" tag="4"/>
    <tag group="ArmorClass" tag="Medium"/>
    <tag group="ArmorMaxDx" tag="3"/>
    <tag group="ArmorAC" tag="6"/>
    <tag group="ArmorArcFl" tag="25"/>
    <tag group="Helper" tag="AutoEquip"/>
    <tag group="Helper" tag="AlwaysMast"/>
    <tag group="Helper" tag="MatCstSuit"/>
    <tag group="Helper" tag="PieceUpMat"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="Helper" tag="Proficient"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="20000"><![CDATA[
      ~ Apply astral suit bonuses &
      call PUAstBonus]]></eval>
    </thing>
  <thing id="rcPUaImDmg" name="Improved Damage" description="The aegis&apos;s melee attacks deal additional damage. If wielding a two-handed weapon, the aegis deals 3 additional points of damage on a successful hit. If wielding a one-handed weapon, the aegis deals 2 additional points of damage on a successful hit. If wielding a light weapon, the aegis deals 1 additional point of damage on a successful hit. If dual-wielding, each weapon is affected separately." compset="RaceCustom" summary="Gain a dmg bonus based on weapon type." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="2"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we're not wearing the Astral Suit, get out now
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ Set focus to the Damage helper pick
      perform hero.childfound[Damage].setfocus
      doneif (state.isfocus = 0)

      ~ Give damage bonus based on weapon type
      focus.field[tDamLight].value += 1
      focus.field[tDamOne].value += 2
      focus.field[tDamTwo].value += 3]]></eval>
    </thing>
  <thing id="rcPUaBrawn" name="Brawn" description="The aegis gains a +2 enhancement bonus to Strength while he is wearing his astral suit. This customization can be selected a second time beginning at 5th level, and a third time starting at 10th level. Each subsequent time it is taken, the enhancement bonus to Strength is increased by +2." compset="RaceCustom" summary="+2 enhancement bonus to Strength while wearing astral suit.">
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="2"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ Set Helper.FirstCopy &
      call X1SetFirst

      ~ If we're not bootstrapped to something, get out now!
      doneif (isroot = 0)

      ~ Using OverCrit tags for getting this ability "free"
      perform hero.pushtags[OverCrit.?]]]></eval>
    <eval phase="PostLevel" priority="10050" index="2"><![CDATA[
      ~ If we are not the first copy, get out now!
      doneif (tagis[Helper.FirstCopy] = 0)

      ~ Bonus is 2 times the number of times this ability has
      ~ been taken.
      field[abValue].value += field[abValue5].value * 2
      field[livename].text = field[thingname].text & " (" & signed(field[abValue].value) & " Str)"
      field[abSumm].text = signed(field[abValue].value) & " enhancement bonus to Strength while wearing astral suit."

      ~ If we're not wearing astral suit, get out now!
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ Increase Str bonus
      #enhancementbonus[hero.child[aSTR], field[abValue].value]]]></eval>
    <prereq message="">
      <validate><![CDATA[
        var allowed as number
        var taken as number
        allowed = 1
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        ~ At level 5 can take this again
        If (levels >= 5) Then
          allowed += 1
        Endif
        ~ At level 10 can take this again
        If (levels >= 10) Then
          allowed += 1
        Endif

        ~ Count the number of times manually added
        taken = tagcount[HasAbility.rcPUaBrawn] - tagcount[OverCrit.rcPUaBrawn]

        ~ if we're a pick, then there must be 3 or fewer copies of
        ~ this ability
        If (@ispick <> 0) Then
          validif (taken <= allowed)

        ~ otherwise, look for fewer, since we're adding this
        Else
          validif (taken < allowed)
        Endif

        @message = "You may not have more than " & allowed & " copies of this ability."]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaFlexS" name="Flexible Suit" description="The aegis&apos;s armor check penalty is reduced by 1 (to a minimum of 0). The aegis may also sleep in his astral suit without becoming fatigued, if he was not already able to do so (such as if in astral skin form)." compset="RaceCustom" summary="Astral suit armor check penalty is reduced by 1 (to a minimum of 0)." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="rcPUaJugge" name="Astral Juggernaut" description="When formed into astral juggernaut, an astral suit resembles masterwork half-plate and is treated as such for all mechanical purposes. Should the aegis be wearing armor when forming his astral suit in this fashion, the astral suit encloses the armor and the aegis gains the benefits of only his astral suit and not that from his armor, even if his armor would confer better benefits. Forming an astral suit into this form takes a full-round action. The aegis gains the following free customizations: fortification, hardy. At 2nd level, the aegis gains the stalwart customization as a free customization when the astral suit is in astral juggernaut form. At 7th level, the astral suit resembles and is treated as masterwork full plate for all mechanical purposes." compset="RaceCustom" summary="Half-Plate/Full Plate; Free customizations: fortification, hardy." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="rcPUaForti">
      <autotag group="CustTaken" tag="cfgPUAstSu"/>
      </bootstrap>
    <bootstrap thing="rcPUaHardy">
      <autotag group="CustTaken" tag="cfgPUAstSu"/>
      </bootstrap>
    <bootstrap thing="rcPUaStalw">
      <containerreq phase="First" priority="500"><![CDATA[count:Custom.AegisLvls >= 2]]></containerreq>
      <autotag group="CustTaken" tag="cfgPUAstSu"/>
      </bootstrap>
    <bootstrap thing="mPUAstArFP">
      <containerreq phase="First" priority="100"><![CDATA[count:Custom.AegisLvls >= 7 & Custom.WearAstS]]></containerreq>
      </bootstrap>
    <bootstrap thing="mPUAstArHP">
      <containerreq phase="First" priority="100"><![CDATA[count:Custom.AegisLvls < 7 & Custom.WearAstS]]></containerreq>
      </bootstrap>
    <eval phase="First"><![CDATA[
      ~ Set tags on hero &
      perform hero.assign[Custom.HasAstSkin]
      perform hero.assign[Custom.ASChosen]]]></eval>
    </thing>
  <thing id="mPUAstArFP" name="Astral Full plate" description="When formed into astral juggernaut, an astral suit resembles masterwork full plate and is treated as such for all mechanical purposes. Should the aegis be wearing armor when forming his astral suit in this fashion, the astral suit encloses the armor and the aegis gains the benefits of only his astral suit and not that from his armor, even if his armor would confer better benefits. Forming an astral suit into this form takes a full-round action." compset="Armor">
    <fieldval field="gWeight" value="50"/>
    <usesource source="pPsiUn"/>
    <tag group="Custom" tag="AstArmor"/>
    <tag group="ArmorAC" tag="9"/>
    <tag group="ArmorCateg" tag="Gauntlets"/>
    <tag group="ArmorCateg" tag="Slows"/>
    <tag group="ArmorCheck" tag="6"/>
    <tag group="ArmorClass" tag="Heavy"/>
    <tag group="ArmorMaxDx" tag="1"/>
    <tag group="ArmorArcFl" tag="35"/>
    <tag group="EquipType" tag="Metal"/>
    <tag group="Helper" tag="AutoEquip"/>
    <tag group="Helper" tag="AlwaysMast"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="Helper" tag="Proficient"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="20000"><![CDATA[
      ~ Apply astral suit bonuses &
      call PUAstBonus]]></eval>
    </thing>
  <thing id="mPUAstArHP" name="Astral Half-plate" description="When formed into astral juggernaut, an astral suit resembles masterwork half-plate and is treated as such for all mechanical purposes. Should the aegis be wearing armor when forming his astral suit in this fashion, the astral suit encloses the armor and the aegis gains the benefits of only his astral suit and not that from his armor, even if his armor would confer better benefits. Forming an astral suit into this form takes a full-round action." compset="Armor">
    <fieldval field="gWeight" value="50"/>
    <usesource source="pPsiUn"/>
    <tag group="Custom" tag="AstArmor"/>
    <tag group="ArmorAC" tag="8"/>
    <tag group="ArmorCateg" tag="Gauntlets"/>
    <tag group="ArmorCateg" tag="Slows"/>
    <tag group="ArmorCheck" tag="7"/>
    <tag group="ArmorClass" tag="Heavy"/>
    <tag group="ArmorMaxDx" tag="0"/>
    <tag group="ArmorArcFl" tag="40"/>
    <tag group="EquipType" tag="Metal"/>
    <tag group="Helper" tag="AlwaysMast"/>
    <tag group="Helper" tag="AutoEquip"/>
    <tag group="Helper" tag="Proficient"/>
    <tag group="Helper" tag="Helper"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="20000"><![CDATA[
      ~ Apply astral suit bonuses &
      call PUAstBonus]]></eval>
    </thing>
  <thing id="rcPUaForti" name="Fortification" description="The aegis gains 25% chance to negate critical hits or sneak attacks (so damage is rolled normally instead). This does not stack with armor with the same special ability. This ability can be selected again starting at 8th level and at 12th level, increasing the chance to negate critical hits or sneak attacks by an additional 25% for every additional time it is taken." compset="RaceCustom" summary="25% chance to negate critical hits or sneak attacks.">
    <usesource source="pPsiUn"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="2"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ Set Helper.FirstCopy &
      call X1SetFirst

      ~ If we're not bootstrapped to something, get out now!
      doneif (isroot = 0)

      ~ Using OverCrit tags for getting this ability "free"
      perform hero.pushtags[OverCrit.?]]]></eval>
    <eval phase="PostLevel" priority="10050" index="2"><![CDATA[
      ~ If we are not the first copy, get out now!
      doneif (tagis[Helper.FirstCopy] = 0)

      ~ Bonus is 2 times the number of times this ability has
      ~ been taken.
      field[abValue].value += field[abValue5].value * 25
      field[livename].text = field[thingname].text & " (" & field[abValue].value & " %)"
      field[abSumm].text = field[abValue].value & "% chance to negate critical hits or sneak attacks."

      ~ If we're not wearing astral suit, get out now!
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ Apply Fortification to hero
      #applyfort[field[abValue].value]]]></eval>
    <prereq message="">
      <validate><![CDATA[
        var allowed as number
        var taken as number
        allowed = 1
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        ~ At level 5 can take this again
        If (levels >= 8) Then
          allowed += 1
        Endif
        ~ At level 10 can take this again
        If (levels >= 12) Then
          allowed += 1
        Endif

        ~ Count the number of times manually added
        taken = tagcount[HasAbility.rcPUaForti] - tagcount[OverCrit.rcPUaForti]

        ~ if we're a pick, then there must be 3 or fewer copies of
        ~ this ability
        If (@ispick <> 0) Then
          validif (taken <= allowed)

        ~ otherwise, look for fewer, since we're adding this
        Else
          validif (taken < allowed)
        Endif

        @message = "You may not have more than " & allowed & " copies of this ability."]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaHardy" name="Hardy" description="The aegis gains a +2 enhancement bonus to Constitution while he is wearing his astral suit. This customization can be selected a second time beginning at 5th level, and a third time starting at 10th level. Each subsequent time it is taken, the enhancement bonus to Constitution is increased by +2." compset="RaceCustom" summary="+2 enhancement bonus to Constitution while wearing astral suit.">
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="2"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ Set Helper.FirstCopy &
      call X1SetFirst

      ~ If we're not bootstrapped to something, get out now!
      doneif (isroot = 0)

      ~ Using OverCrit tags for getting this ability "free"
      perform hero.pushtags[OverCrit.?]]]></eval>
    <eval phase="PostLevel" priority="10050" index="2"><![CDATA[
      ~ If we are not the first copy, get out now!
      doneif (tagis[Helper.FirstCopy] = 0)

      ~ Bonus is 2 times the number of times this ability has
      ~ been taken.
      field[abValue].value += field[abValue5].value * 2
      field[livename].text = field[thingname].text & " (" & signed(field[abValue].value) & " Con)"
      field[abSumm].text = signed(field[abValue].value) & " enhancement bonus to Constitution while wearing astral suit."

      ~ If we're not wearing astral suit, get out now!
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ Increase Dex bonus
      #enhancementbonus[hero.child[aCON], field[abValue].value]]]></eval>
    <prereq message="">
      <validate><![CDATA[
        var allowed as number
        var taken as number
        allowed = 1
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        ~ At level 5 can take this again
        If (levels >= 5) Then
          allowed += 1
        Endif
        ~ At level 10 can take this again
        If (levels >= 10) Then
          allowed += 1
        Endif

        ~ Count the number of times manually added
        taken = tagcount[HasAbility.rcPUaHardy] - tagcount[OverCrit.rcPUaHardy]

        ~ if we're a pick, then there must be 3 or fewer copies of
        ~ this ability
        If (@ispick <> 0) Then
          validif (taken <= allowed)

        ~ otherwise, look for fewer, since we're adding this
        Else
          validif (taken < allowed)
        Endif

        @message = "You may not have more than " & allowed & " copies of this ability."]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaStalw" name="Stalwart" description="As long as the aegis is wearing the astral suit, if the aegis is subjected to an attack that normally allows a Fortitude or Will save for a reduced or partial effect, he ignores the effect if he makes a successful saving throw.{br}{br}The aegis must be at least 2nd level before selecting this customization." compset="RaceCustom" summary="Ignore partial effects when making a Fort/Will save." uniqueness="useronce">
    <fieldval field="abText5" value="If save allows for a reduced or partial effect, then ignore the effect if you successfully save."/>
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="50000"><![CDATA[
      ~ If we're not wearing the Astral Suit, get out now
      doneif (hero.tagcount[Custom.WearAstS] = 0)

      ~ Add situational notes to Will/Fort saves &
      #situational[hero.childfound[svWill],field[abText5].text,field[name].text]
      #situational[hero.childfound[svFort],field[abText5].text,field[name].text]]]></eval>
    <prereq message="Aegis level 2+ required.">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Aegis"
        call PUPreReqs
        validif (levels >= 2)]]></validate>
      </prereq>
    </thing>
  <thing id="rcPUaDarkv" name="Darkvision" description="The aegis gains darkvision out to a range of 60 feet." compset="RaceCustom" uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="SpecType" tag="Sense"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="raDarkVis">
      <containerreq phase="First" priority="500">Custom.WearAstS</containerreq>
      <assignval field="abValue" value="60"/>
      </bootstrap>
    </thing>
  <thing id="rcPUaRngAt" name="Ranged Attack" description="The aegis gains the ability to propel a non-psionic crystal, formed from the astral suit, at a target as a ranged attack that deals 1d8 points of piercing damage and has a range increment of 30 ft. This attack can be used as part of a full attack, including using this attack for each attack in the full attack." compset="CustomSpec">
    <fieldval field="abValue" value="1"/>
    <fieldval field="abValue2" value="8"/>
    <usesource source="pPsiUn"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="CustomCost" tag="1"/>
    <tag group="Helper" tag="WeaponSpec"/>
    <tag group="wCategory" tag="RangeProj"/>
    <tag group="wType" tag="P"/>
    <tag group="wCritMin" tag="20"/>
    <tag group="wCritMult" tag="2"/>
    <tag group="AllowRCust" tag="cfgPUAstSu"/>
    <eval phase="Final" priority="500"><![CDATA[
      ~ Build fixed ranged damage dice with no bonus damage &
      If (field[abValue3].value = 0) Then
        field[wFixRanDam].text = field[abValue].value & "d" & field[abValue2].value

      ~ Include damage dice with bonus
      Else
        field[wFixRanDam].text = field[abValue].value & "d" & field[abValue2].value & signed(field[abValue3].value)
      Endif]]></eval>
    </thing>
  </document>
